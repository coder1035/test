package com.example.gfscanc.controller;

import com.example.gfscanc.entity.ScreeningRequest;
import com.example.gfscanc.entity.ScreeningResponse;
import com.example.gfscanc.service.ScreeningService;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/screening")
@RequiredArgsConstructor
public class ScreeningController {
    private final ScreeningService screeningService;

    @PostMapping
    public ResponseEntity<ScreeningResponse> screenParty(@RequestBody ScreeningRequest request) {
        ScreeningResponse response = screeningService.processScreening(request);
        return ResponseEntity.ok(response);
    }
}

String sql = """
    SELECT *  
    FROM ASM.CDM_MASTER_CUST_DATA  
    WHERE DATASET_ID IN (1301, 1302)  
    AND STATUS LIKE 'A'  
    AND versionid = (  
        SELECT MAX(version_id)  
        FROM ASM.CDM_CUST_DATA_DETAIL  
        WHERE field = 'PARTY1_ID'  
        AND field_value LIKE :partyId  
    )
""";

Map<String, Object> params = Map.of("partyId", partyId);
List<Map<String, Object>> results = namedParameterJdbcTemplate.queryForList(sql, params);

if (!results.isEmpty()) {
    System.out.println("Party ID is actively screened.");
} else {
    System.out.println("Party ID is not actively screened.");
}


SELECT m.*  
FROM ASM.CDM_MASTER_CUST_DATA m  
JOIN (
    SELECT MAX(version_id) AS max_version_id  
    FROM ASM.CDM_CUST_DATA_DETAIL  
    WHERE field = 'PARTY1_ID'  
    AND field_value = :partyId  
) d ON m.versionid = d.max_version_id  
WHERE m.DATASET_ID IN (1301, 1302)  
AND m.STATUS = 'A';
